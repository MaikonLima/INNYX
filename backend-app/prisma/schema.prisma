generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  name         String
  email        String       @unique
  password     String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  refreshToken String?
  roles        UserRole[]
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  description String?
  users       UserRole[]
  permissions RolePermission[]
}

model Permission {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  description String?
  roles       RolePermission[]
}

model UserRole {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
  role    Role  @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId  Int

  @@unique([userId, roleId])
}

model RolePermission {
  id           Int         @id @default(autoincrement())
  permission   Permission  @relation(fields: [permissionId], references: [id])
  permissionId Int
  role         Role        @relation(fields: [roleId], references: [id])
  roleId       Int

  @@unique([permissionId, roleId])
}


model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  products Product[] 
}

model Product {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(50)
  description       String    @db.VarChar(200)
  price             Float     
  expirationDate    DateTime  
  createdAt         DateTime
  image             String    
  categoryId        Int
  category          Category @relation(fields: [categoryId], references: [id])
}

